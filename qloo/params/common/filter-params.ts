import { FilterType, Gender, LogicOperator } from "./supporting-types.ts";

export interface QlooFilterParams {
  filterType: FilterType;
  filterAddress?: string;
  filterAudienceTypes?: string[];
  filterContentRating?: string;
  filterDateOfBirthMax?: Date;
  filterDateOfBirthMin?: Date;
  filterDateOfDeathMax?: Date;
  filterDateOfDeathMin?: Date;
  filterEntities?: string;
  filterExcludeEntities?: string;
  filterExcludeEntitiesQuery?: string[];
  filterExcludeTags?: LogicOperator;
  operatorExcludeTags?: string;
  filterExternalExists?: string;
  operatorFilterExternalExists?: string;
  filterExternalResyCountMax?: number;
  filterExternalResyCountMin?: number;
  filterExternalResyPartySizeMax?: number;
  filterExternalResyPartySizeMin?: number;
  filterExternalResyRatingMax?: number;
  filterExternalResyRatingMin?: number;
  filterExternalTripadvisorRatingCountMax?: number;
  filterExternalTripadvisorRatingCountMin?: number;
  filterExternalTripadvisorRatingMax?: number;
  filterExternalTripadvisorRatingMin?: number;
  filterFinaleYearMax?: number;
  filterFinaleYearMin?: number;
  filterGender?: Gender;
  filterGeocodeAdmin1Region?: string;
  filterGeocodeAdmin2Region?: string;
  filterGeocodeCountryCode?: string;
  filterGeocodeName?: string;
  filterHotelClassMax?: number;
  filterHotelClassMin?: number;
  filterHours?: string;
  filterIds?: string;
  filterLatestKnownYearMax?: number;
  filterLatestKnownYearMin?: number;
  filterLocation?: string;
  filterExcludeLocation?: string;
  filterLocationQuery?: string[];
  filterExcludeLocationQuery?: string;
  filterLocationGeohash?: string;
  filterExcludeLocationGeohash?: string;
  filterLocationRadius?: number;
  filterParentsTypes?: string[];
  filterPopularityMax?: number;
  filterPopularityMin?: number;
  filterPriceLevelMax?: number;
  filterPriceLevelMin?: number;
  filterPriceRangeFrom?: number;
  filterPriceRangeTo?: number;
  filterPropertiesBusinessRatingMax?: number;
  filterPropertiesBusinessRatingMin?: number;
  filterPublicationYearMax?: number;
  filterPublicationYearMin?: number;
  filterRatingMax?: number;
  filterRatingMin?: number;
  filterReferencesBrand?: string[];
  filterReleaseCountry?: string[];
  filterResultsEntities?: string;
  filterResultsEntitiesQuery?: string[];
  operatorFilterReleaseCountry?: LogicOperator;
  filterReleaseDateMax?: Date;
  filterReleaseDateMin?: Date;
  filterReleaseYearMax?: number;
  filterReleaseYearMin?: number;
  filterTagTypes?: string[];
  filterTags?: string;
  operatorFilterTags?: string;
}
